name: Build and Push Docker Image

on:
  push:
    branches:
      - 'docker-db'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-docker-db

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH Keys and known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          cat ~/.ssh/id_rsa
      - name: Check SSH key
        run: |
          ls -la ~/.ssh
          cat ~/.ssh/id_rsa
        
      - name: Start ssh-agent and add SSH key
        run: |
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
      

      - name: Execute remote commands
        run: |
          ssh root@${{ secrets.SSH_HOST }} 

      - name: Stop and delete existing Docker container
        run: |
          ssh -tt -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.SSH_HOST }} << 'EOF'
          if docker ps -a --format '{{.Names}}' | grep -Eq '^docker-db$'; then
            docker stop docker-db && docker rm docker-db
          fi
   

      - name: Pull and deploy new Docker container
        run: |
          ssh -tt -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.SSH_HOST }} << 'EOF'
          docker pull $REGISTRY/${{ github.repository }}:docker-db
          docker run -d --name docker-db -p 8080:8000 $REGISTRY/${{ github.repository }}:docker-db
   
