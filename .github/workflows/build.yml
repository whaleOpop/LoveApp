name: Build and Push Docker Image

on:
    push:
        branches:
            - 'docker-db'
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}-docker-db

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@v3.0.0
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
      
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            
            - name: Build and push Docker image
              uses: docker/build-push-action@v5.3.0
              with:
                context: .
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
    deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup SSH Keys and known_hosts
          env:
              SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          run: |
              ssh-agent -a $SSH_AUTH_SOCK > /dev/null
              ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"

        - name: Deploy to Host
          env:
            HOST: ${{ secrets.HOST }}
          run: |
            ssh -o StrictHostKeyChecking=no root@${HOST} "
        - name: Stop docker container
          run: | 
              docker stop docker-db
        - name: Delete docker container
          run: | 
              docker delete docker-db
        - name: Pull the latest image
          run: | 
              docker pull $REGISTRY/${{ github.repository }}:docker-db
        - name: Deploy container
          run: | 
              docker run -d --name docker-db -p 8080:8000 $REGISTRY/${{ github.repository }}:docker-db